using System;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Threading.Tasks;
using Newtonsoft.Json;

public class QlikSenseSessionManager
{
    private readonly string _baseUrl;
    private readonly HttpClientHandler _handler;
    private readonly HttpClient _httpClient;
    private readonly CookieContainer _cookieContainer;

    public QlikSenseSessionManager(string baseUrl)
    {
        _baseUrl = baseUrl;
        _cookieContainer = new CookieContainer();
        _handler = new HttpClientHandler
        {
            // Set to true to use cookies
            UseCookies = true,
            CookieContainer = _cookieContainer,
            // Set to false to bypass SSL certificate validation
            ServerCertificateCustomValidationCallback = (message, cert, chain, errors) => true
        };
        _httpClient = new HttpClient(_handler);
        _httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
    }

    public async Task<string> GetUserSessionsAsync()
    {
        var response = await _httpClient.GetAsync($"{_baseUrl}/qps/user");
        response.EnsureSuccessStatusCode();
        return await response.Content.ReadAsStringAsync();
    }

    public async Task<string> CreateSessionAsync(string userId, string userDirectory)
    {
        var content = new StringContent(JsonConvert.SerializeObject(new { UserId = userId, UserDirectory = userDirectory }), System.Text.Encoding.UTF8, "application/json");
        var response = await _httpClient.PostAsync($"{_baseUrl}/qps/session", content);
        response.EnsureSuccessStatusCode();
        return await response.Content.ReadAsStringAsync();
    }

    public async Task DeleteSessionAsync(string sessionId)
    {
        var response = await _httpClient.DeleteAsync($"{_baseUrl}/qps/session/{sessionId}");
        response.EnsureSuccessStatusCode();
    }
}
